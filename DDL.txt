CREATE TABLE USER_TYPE (
    TYPE_ID INT PRIMARY KEY,
    TYPE_DESC VARCHAR(100) NOT NULL
);

-------------------------------------
CREATE TABLE USER (
    USER_ID INT PRIMARY KEY,
    NAME VARCHAR(100) NOT NULL,
    USER_NAME VARCHAR(50) NOT NULL UNIQUE,
    PASSWORD VARCHAR(255) NOT NULL,
    EMAIL VARCHAR(100),
    PHONE VARCHAR(20),
    TYPE_ID INT,
    FOREIGN KEY (TYPE_ID) REFERENCES USER_TYPE(TYPE_ID)
);
---------------------------------------
CREATE TABLE TASK_STATUS (
    STATUS_ID INT PRIMARY KEY,
    STATUS_DESC VARCHAR(100) NOT NULL
);
---------------------------------------
CREATE TABLE TASK_PRIORITY (
    PRIORITY_ID INT PRIMARY KEY,
    PRIORITY_DESC VARCHAR(100) NOT NULL
);
---------------------------------------
CREATE TABLE TASK (
    TASK_ID INT PRIMARY KEY,
    TITLE VARCHAR(100) NOT NULL,
    DESCRIPTION TEXT,
    STATUS INT,
    PRIORITY INT,
    DUE_DATE DATE,
    FOREIGN KEY (STATUS) REFERENCES TASK_STATUS(STATUS_ID),
    FOREIGN KEY (PRIORITY) REFERENCES TASK_PRIORITY(PRIORITY_ID)
);
---------------------------------------
CREATE TABLE TASK_HISTORY (
    ID INT PRIMARY KEY,
    TASK_ID INT,
    PRE_STATUS INT,
    LAST_UPDATE_DATE TIMESTAMP NOT NULL,
    LAST_UPDATE_USER VARCHAR(100) NOT NULL,
    FOREIGN KEY (TASK_ID) REFERENCES TASK(TASK_ID),
    FOREIGN KEY (PRE_STATUS) REFERENCES TASK_STATUS(STATUS_ID)
);
---------------------------------------
CREATE TABLE TASK_NOTIFICATION (
    ID INT PRIMARY KEY,
    TASK_ID INT,
    EMAIL VARCHAR(100) NOT NULL,
    SEND_DATE TIMESTAMP NOT NULL,
    SENDER VARCHAR(100) NOT NULL,
    FOREIGN KEY (TASK_ID) REFERENCES TASK(TASK_ID)
);
